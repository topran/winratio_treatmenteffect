#SPECIAL INSTRUCTIONS              : win ratio calculation when treatment effect direction inconsistent
#---------------------------------------------------------------------------------------------------------------
#  DOCUMENTATION AND REVISION HISTORY SECTION (required):
#         Author &
#  Ver#   Peer Reviewer                         Code History Description
#---- ------------------------           ------------------------------------------------
#  1.0   Ran Liao             Original version of the code: modified based on Xiaodong Luo WWR package 
#*eoh***********************************************************************************************************


###win ratio function 
####general win loss
###Define the win loss function

##Note:
#1: please preload WWR package 
#2: tte.winratio is a pre-defined analysis data set

comp<-function(y,x){
  y1i<-y[1];y2i<-y[2];d1i<-y[3];d2i<-y[4]
  y1j<-x[1];y2j<-x[2];d1j<-x[3];d2j<-x[4] 
  w2<-0;w1<-0;l2<-0;l1<-0
  
  # if (d2j==1 & y2i>=y2j) w2<-1 # j die before  i, i win
  # else if (d2i==1 & y2j>=y2i) l2<-1 # i die before j, i loss
  
  # if (w2==0 & l2==0 & d1j==1 & y1i>=y1j) w1<-1 # no win or loss first round, j hospital first, i win
  # else if (w2==0 & l2==0 & d1i==1 & y1j>=y1i) l1<-1 # no win or loss first round, i hospital first, i loss
  
  ## new win ratio define 
  if (d2j==1 & y2i>=y2j) l2<-1 # j is patient from trt group, if j recover first, trt win  
  else if (d2i==1 & y2j>=y2i) w2<-1 # i is patient from control group, if i recover first, trt loss
  if (w2==0 & l2==0 & d1j==1 & y1i>=y1j) w1<-1 # no win or loss first round, j from trt group intubation first, control win
  else if (w2==0 & l2==0 & d1i==1 & y1j>=y1i) l1<-1 # no win or loss first round, i hospital first, control loss  
  
  
  comp<-0
  if (w2==1) comp<-1 
  else if (l2==1) comp<-(-1)
  else if (w1==1) comp<-2
  else if (l1==1) comp<-(-2)
  
  comp
}


#####################################
y1<-tte.winratio1$y1
y2<-tte.winratio1$y2
d1<-tte.winratio1$d1
d2<-tte.winratio1$d2
z<-tte.winratio1$trt
y<-cbind(y1,y2,d1,d2,z)
yy1<-y[z==1,]
yy0<-y[z==0,]
n1<-sum(z==1)
n0<-sum(z==0)

###Use the user-defined win loss function to calculate the win loss matrix
bindex<-matrix(0,nrow=n1,ncol=n0)
for (i in 1:n1)for (j in 1:n0)bindex[i,j]<-comp(yy1[i,],yy0[j,])
###Use the calculated win loss matrix to calculate the general win loss statistics
bgwr<-genwr(bindex)
bgwr.sum<-summary(bgwr)


#1000 simulaiton 
outwin<-matrix(NA,n_sim,11)


for (k in 1:n_sim){
  tte.winratio1<-subset(tte.all,tte.all$sim==k)
  
  tte.winratio1$y1<-with(tte.winratio1, pmin(t.rec,t.intu))# y1 minimun of event time t1 and t2 where t2 is the terminal event 
  tte.winratio1$y2<-tte.winratio1$t.rec #y2 terminal event 
  tte.winratio1$d1<-ifelse(tte.winratio1$t.intu<tte.winratio1$t.rec,1,0)
  tte.winratio1$d2<-tte.winratio1$event.rec
  
  y1<-tte.winratio1$y1
  y2<-tte.winratio1$y2
  d1<-tte.winratio1$d1
  d2<-tte.winratio1$d2
  z<-tte.winratio1$trt
  y<-cbind(y1,y2,d1,d2,z)
  yy1<-y[z==1,]
  yy0<-y[z==0,]
  n1<-sum(z==1)
  n0<-sum(z==0)
  
  ###Use the user-defined win loss function to calculate the win loss matrix
  bindex<-matrix(0,nrow=n1,ncol=n0)
  for (i in 1:n1)for (j in 1:n0)bindex[i,j]<-comp(yy1[i,],yy0[j,])
  ###Use the calculated win loss matrix to calculate the general win loss statistics
  bgwr1<-genwr(bindex)
  
  interb<-round(exp(c(log(bgwr1$wr)-1.96*sqrt(bgwr1$vr/bgwr1$wr^2/bgwr1$n),log(bgwr1$wr)+1.96*sqrt(bgwr1$vr/bgwr1$wr^2/bgwr1$n)) ),3 )
  
  
  outwin[k,]<-round(c(bgwr1$totalw,bgwr1$totall, bgwr1$tw,bgwr1$tl, bgwr1$wr, sqrt(bgwr1$vr),interb, bgwr1$pr),3)
}